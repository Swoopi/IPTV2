{"ast":null,"code":"var _jsxFileName = \"/Users/dylanfarrell/projects/IPTV2/website/client/src/components/checkout/CheckoutForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\n\n// Use the publishable key from the environment variable\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY);\nconst CheckoutForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n    if (error) {\n      setError(error.message);\n      setLoading(false);\n      return;\n    }\n    try {\n      const response = await fetch('https://localhost:5001/create-payment-intent', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount: 1000\n        }) // Amount in cents\n      });\n      const paymentIntent = await response.json();\n      const {\n        error: confirmError\n      } = await stripe.confirmCardPayment(paymentIntent.clientSecret, {\n        payment_method: paymentMethod.id\n      });\n      if (confirmError) {\n        setError(confirmError.message);\n        setLoading(false);\n        return;\n      }\n      setSuccess(true);\n      setLoading(false);\n    } catch (error) {\n      setError(error.message);\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe || loading,\n      children: loading ? 'Processing...' : 'Pay'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Payment successful!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckoutForm, \"s8N6bMjexO+VKM22i274+dnW6Ks=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nconst StripeCheckout = () => {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_c2 = StripeCheckout;\nexport default StripeCheckout;\nvar _c, _c2;\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"StripeCheckout\");","map":{"version":3,"names":["React","useState","loadStripe","Elements","CardElement","useStripe","useElements","jsxDEV","_jsxDEV","stripePromise","process","env","REACT_APP_STRIPE_PUBLISHABLE_KEY","CheckoutForm","_s","stripe","elements","loading","setLoading","error","setError","success","setSuccess","handleSubmit","event","preventDefault","paymentMethod","createPaymentMethod","type","card","getElement","message","response","fetch","method","headers","body","JSON","stringify","amount","paymentIntent","json","confirmError","confirmCardPayment","clientSecret","payment_method","id","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","StripeCheckout","_c2","$RefreshReg$"],"sources":["/Users/dylanfarrell/projects/IPTV2/website/client/src/components/checkout/CheckoutForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\n\n// Use the publishable key from the environment variable\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY);\n\nconst CheckoutForm = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setLoading(true);\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n    });\n\n    if (error) {\n      setError(error.message);\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const response = await fetch('https://localhost:5001/create-payment-intent', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ amount: 1000 }), // Amount in cents\n      });\n\n      const paymentIntent = await response.json();\n\n      const { error: confirmError } = await stripe.confirmCardPayment(paymentIntent.clientSecret, {\n        payment_method: paymentMethod.id,\n      });\n\n      if (confirmError) {\n        setError(confirmError.message);\n        setLoading(false);\n        return;\n      }\n\n      setSuccess(true);\n      setLoading(false);\n    } catch (error) {\n      setError(error.message);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <CardElement />\n      <button type=\"submit\" disabled={!stripe || loading}>\n        {loading ? 'Processing...' : 'Pay'}\n      </button>\n      {error && <div>{error}</div>}\n      {success && <div>Payment successful!</div>}\n    </form>\n  );\n};\n\nconst StripeCheckout = () => {\n  return (\n    <Elements stripe={stripePromise}>\n      <CheckoutForm />\n    </Elements>\n  );\n};\n\nexport default StripeCheckout;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}