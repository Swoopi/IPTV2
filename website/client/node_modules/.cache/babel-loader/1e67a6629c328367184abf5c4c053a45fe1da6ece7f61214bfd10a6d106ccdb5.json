{"ast":null,"code":"var _jsxFileName = \"/Users/dylanfarrell/projects/IPTV2/website/client/src/components/checkout/CheckoutForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('your-stripe-publishable-key');\nconst CheckoutForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n    if (error) {\n      setError(error.message);\n      setLoading(false);\n      return;\n    }\n    const response = await fetch('/create-payment-intent', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount: 1000\n      }) // Amount in cents\n    });\n    const paymentIntent = await response.json();\n    const {\n      error: confirmError\n    } = await stripe.confirmCardPayment(paymentIntent.clientSecret, {\n      payment_method: paymentMethod.id\n    });\n    if (confirmError) {\n      setError(confirmError.message);\n      setLoading(false);\n      return;\n    }\n    setSuccess(true);\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe || loading,\n      children: loading ? 'Processing...' : 'Pay'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Payment successful!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckoutForm, \"s8N6bMjexO+VKM22i274+dnW6Ks=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nconst StripeCheckout = () => {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_c2 = StripeCheckout;\nexport default StripeCheckout;\nvar _c, _c2;\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"StripeCheckout\");","map":{"version":3,"names":["React","useState","loadStripe","Elements","CardElement","useStripe","useElements","jsxDEV","_jsxDEV","stripePromise","CheckoutForm","_s","stripe","elements","loading","setLoading","error","setError","success","setSuccess","handleSubmit","event","preventDefault","paymentMethod","createPaymentMethod","type","card","getElement","message","response","fetch","method","headers","body","JSON","stringify","amount","paymentIntent","json","confirmError","confirmCardPayment","clientSecret","payment_method","id","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","StripeCheckout","_c2","$RefreshReg$"],"sources":["/Users/dylanfarrell/projects/IPTV2/website/client/src/components/checkout/CheckoutForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\n\nconst stripePromise = loadStripe('your-stripe-publishable-key');\n\nconst CheckoutForm = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setLoading(true);\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n    });\n\n    if (error) {\n      setError(error.message);\n      setLoading(false);\n      return;\n    }\n\n    const response = await fetch('/create-payment-intent', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ amount: 1000 }), // Amount in cents\n    });\n\n    const paymentIntent = await response.json();\n\n    const { error: confirmError } = await stripe.confirmCardPayment(paymentIntent.clientSecret, {\n      payment_method: paymentMethod.id,\n    });\n\n    if (confirmError) {\n      setError(confirmError.message);\n      setLoading(false);\n      return;\n    }\n\n    setSuccess(true);\n    setLoading(false);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <CardElement />\n      <button type=\"submit\" disabled={!stripe || loading}>\n        {loading ? 'Processing...' : 'Pay'}\n      </button>\n      {error && <div>{error}</div>}\n      {success && <div>Payment successful!</div>}\n    </form>\n  );\n};\n\nconst StripeCheckout = () => {\n  return (\n    <Elements stripe={stripePromise}>\n      <CheckoutForm />\n    </Elements>\n  );\n};\n\nexport default StripeCheckout;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}